"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.typeShape=exports.RX=exports.flatten=exports.config=exports.toAltSchema=exports.shape=exports.check=exports.verify=void 0;var _slicedToArray=function(){function a(a,b){var c=[],d=!0,e=!1,f=void 0;try{for(var g,h=a[Symbol.iterator]();!(d=(g=h.next()).done)&&(c.push(g.value),!(b&&c.length===b));d=!0);}catch(a){e=!0,f=a}finally{try{!d&&h["return"]&&h["return"]()}finally{if(e)throw f}}return c}return function(b,c){if(Array.isArray(b))return b;if(Symbol.iterator in Object(b))return a(b,c);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),_lodash=require("lodash"),_types=require("./types"),types=_interopRequireWildcard(_types);/**
 * Author: Yusuf Bhabhrawala
 *//* eslint-disable nonblock-statement-body-position *//* eslint-disable no-restricted-syntax *//* eslint-disable no-cond-assign */function _interopRequireWildcard(a){if(a&&a.__esModule)return a;var b={};if(null!=a)for(var c in a)Object.prototype.hasOwnProperty.call(a,c)&&(b[c]=a[c]);return b.default=a,b}var RX={FLAT_ARRAY:/(\[([^\[\]\{\}]*)\])/,FLAT_OBJECT:/(\{([^\{\}\[\]]*)\})/,MALFORMED:/[\[\]\{\}]/,FLAT_SCALAR:/^[^\[\]\{\}]*$/,OPTIONAL:/^[\?]/,LOOKUP:/^[0-9]+$/,DEFAULTS:/^\$([0-9]+)$/},OPTIONS={excludeOptional:!0,errorName:"json"},config=function(a){if(a.options&&Object.assign(OPTIONS,a.options),a.types)for(var b in a.types)types.add(b,a.types[b])},flatten=function(a){function b(a){for(var d=void 0,e=!1;(d=a.match(RX.FLAT_ARRAY))||(d=a.match(RX.FLAT_OBJECT));)a=a.substr(0,d.index)+c.length+a.substr(d.index+d[0].length),c.push(d[0]),e=!0;if(e&&b(a),!e&&a.match(RX.MALFORMED))throw"Schema error: probably invalid braces or brackets";return a}// convert "hello world" to $0. remote " (quotes)
for(var c=[],d=[],e=void 0;e=a.match(/"([^"]+)"/);)a=a.substr(0,e.index)+("$"+d.length)+a.substr(e.index+e[0].length),d.push(e[1]);if(a.match(/"/))throw"Missing closing quote";// strip all white spaces
return a=a.replace(/\s/g,""),a=b(a),[a,c,d]};function splitOnce(a,b){var c=a.split(b),d=c.shift();return[d,c.join(b)]}// Set leaf types to format "optional:type:default_value" tuple. Eg. "?:boolean:false" or ":integer:"
var typeShape=function(a){function b(a){if(!a)return"";var c;if(a.match(RX.LOOKUP))return b(f[1*a]);if(c=a.match(RX.FLAT_ARRAY)){a=c[2];var j=a.split(",");return 0<j.length?[b(j[0])]:[b("")]}if(c=a.match(RX.FLAT_OBJECT))return a=c[2],a.split(",").reduce(function(a,c){var d=splitOnce(c,":"),e=_slicedToArray(d,2),f=e[0],g=e[1];return a[f]=b(g),a},{});if(a.match(RX.FLAT_SCALAR)){var d=a.split(":"),e=_slicedToArray(d,2),h=e[0],i=e[1];i||(i=""),i&&i.match(RX.DEFAULTS)&&(i=g[1*i.substr(1)]);var k="";h.match(RX.OPTIONAL)&&(k="?",h=h.substr(1));var l={i:"integer",n:"number",b:"boolean",s:"string"};return l[h]&&(h=l[h]),[k,h,i].join(":")}}var c=flatten(a),d=_slicedToArray(c,3),e=d[0],f=d[1],g=d[2];return b(e)},toAltSchema=function(a){function b(a){var c=types.get(a);if("array"===c){var d=0<a.length?b(a[0]):"";return"["+d+"]"}return"object"===c?"{"+Object.keys(a).map(function(c){return c+":"+b(a[c])}).join(",")+"}":c}return b(a)},shape=function(a,b){// flat validator value = {k:t:d,..} [t:d,..] t:d
function c(a){var b=a.value,d=a.schema;d||(d="");var g=void 0,h=!1;// if lookup, validate further
if(d.match(RX.OPTIONAL)&&(d=d.substr(1),h=!0),g=d.match(RX.LOOKUP))return c({value:b,schema:""+(h?"?":"")+f[1*d]});if((null===b||void 0===b)&&h&&e)return null;if(d.match(RX.FLAT_SCALAR)){// if scalar
var i=void 0,k=void 0,l=d.split(":"),n=_slicedToArray(l,2);return i=n[0],k=n[1],j(i,b,k)}if(g=d.match(RX.FLAT_ARRAY)){d=g[2];var o=d.split(",");return(0,_lodash.isArray)(b)||(b=o.map(function(){return null})),b.length<o.length&&(b=b.concat(o.slice(b.length).map(function(){return null}))),b.map(function(a,b){return c({value:a,schema:o[b%o.length]})})}return(g=d.match(RX.FLAT_OBJECT))?((!(0,_lodash.isObject)(b)||(0,_lodash.isArray)(b))&&(b={}),d=g[2],""===d?b:d.split(",").reduce(function(a,e){var f=e.split(":"),g=_slicedToArray(f,3),h=g[0],i=g[1],j=g[2];return i||(i=""),j&&(i+=":"+j),a[h]=c({value:b[h],schema:i}),a},{})):void 0}var d=2<arguments.length&&arguments[2]!==void 0?arguments[2]:{};d=Object.assign({},OPTIONS,d);var e=d.excludeOptional,f=void 0,g=void 0,h=flatten(b),i=_slicedToArray(h,3);b=i[0],f=i[1],g=i[2];var j=function(a,b,c){var d;return c&&(d=c.match(RX.DEFAULTS))&&(c=g[1*d[1]]),types.has(a)?b&&types.check(a,b)?b:void 0===c?types.sample(a):c:b||c||"Not defined!"},k=c({value:a,schema:b});return k},verify=function(a,b,c){//console.log("lookups", lookups);
// flat validator value = {k:t:d,..} [t:d,..] t:d
function d(b){var c=b.path,g=b.value,h=b.schema,j=b.parent,l=void 0===j?null:j,n=void 0,o=!1;//console.log("validate", value, schema);
if(h.match(RX.OPTIONAL)){if(h=h.substr(1),void 0===g||null===g)return!0;o=!0}// if lookup, validate further
if(n=h.match(RX.LOOKUP))return d({path:""+c,value:g,schema:""+(o?"?":"")+f[1*h],parent:l});if(h.match(RX.FLAT_SCALAR)){// if scalar
var p=void 0,q=h.split(":"),r=_slicedToArray(q,2);if(h=r[0],p=r[1],void 0===g||null===g)return e.push(c+": is required"),!1;if(""===h)return!0;// no validation needed
if(!types.has(h))throw"Schema error: Validator - "+h+" - not found";else return!!types.check(h,g,{path:c,json:a,parent:l})||(e.push(c+": validation failed"),!1)}else if(n=h.match(RX.FLAT_ARRAY)){// if array
if(!(0,_lodash.isArray)(g))return e.push(c+": should be array"),!1;h=n[2];var s=h.split(",");for(var t in g)d({path:c+"."+t,value:g[t],schema:s[t%s.length],parent:g})}else if(n=h.match(RX.FLAT_OBJECT)){// if object
if(!(0,_lodash.isObject)(g)||(0,_lodash.isArray)(g))return e.push(c+": should be object"),!1;if(h=n[2],""!==h){var i=h.split(",").reduce(function(a,b){var c=b.split(":"),d=_slicedToArray(c,2),e=d[0],f=d[1];return f||(f=""),a[e]=f,a},{});// if object, validate for all k-v
for(var u in i)d({path:c+"."+u,value:g[u],schema:i[u],parent:g})}}}c=Object.assign({},OPTIONS,c);var e=[],f=void 0,g=flatten(b),h=_slicedToArray(g,2);if(b=h[0],f=h[1],d({path:c.errorName,value:a,schema:b}),0<e.length)throw e.join(", ");return!0},check=function(a,b){try{return verify(a,b),!0}catch(a){if(a.match(/^Schema error/))throw a;return!1}};// same as verify. returns boolean. won't throw.
types.verify=verify,exports.verify=verify,exports.check=check,exports.shape=shape,exports.toAltSchema=toAltSchema,exports.config=config,exports.flatten=flatten,exports.RX=RX,exports.typeShape=typeShape;